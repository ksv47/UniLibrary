#Область ПроверенныеФункции

#Область ПреобразованиеТипов

// Преобразует исходную строку в число без вызова исключений.
//
// Параметры:
//   Значение - Строка - строка, которую необходимо привести к числу.
//                       Например, "10", "+10", "010", вернет 10;
//                                 "(10)", "-10",вернет -10;
//                                 "10,2", "10.2",вернет 10.2;
//                                 "000", " ", "",вернет 0;
//                                 "10текст", вернет Неопределено.
//
// Возвращаемое значение:
//   Число, Неопределено - полученное число, либо Неопределено, если строка не является числом.
//
Функция СтрокаВЧисло(Знач Значение) Экспорт
	
	Значение  = СтрЗаменить(Значение, " ", "");
	Если СтрНачинаетсяС(Значение, "(") Тогда
		Значение = СтрЗаменить(Значение, "(", "-");
		Значение = СтрЗаменить(Значение, ")", "");
	КонецЕсли;
	
	СтрокаБезНулей = СтрЗаменить(Значение, "0", "");
	Если ПустаяСтрока(СтрокаБезНулей) Или СтрокаБезНулей = "-" Тогда
		Возврат 0;
	КонецЕсли;
	
	ТипЧисло  = Новый ОписаниеТипов("Число");
	Результат = ТипЧисло.ПривестиЗначение(Значение);
	
	Возврат ?(Результат <> 0 И Не ПустаяСтрока(СтрокаБезНулей), Результат, Неопределено);
	
КонецФункции

#КонецОбласти

#Область Проверки
// Проверяет, содержит ли строка только цифры.
//
// Параметры:
//  Значение         - Строка - проверяемая строка.
//  Устаревший       - Булево - устаревший параметр, не используется.
//  ПробелыЗапрещены - Булево - если Ложь, то в строке допустимо наличие пробелов.
//
// Возвращаемое значение:
//   Булево - Истина - строка содержит только цифры или пустая, Ложь - строка содержит иные символы.
//
// Пример:
//  Результат = ТолькоЦифрыВСтроке("0123"); // Истина
//  Результат = ТолькоЦифрыВСтроке("0123abc"); // Ложь
//  Результат = ТолькоЦифрыВСтроке("01 2 3",, Ложь); // Истина
//
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////
Функция ТолькоЦифрыВСтроке(Знач Значение, Знач ПробелыЗапрещены = Истина) Экспорт
	
	Если ТипЗнч(Значение) <> Тип("Строка") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ПробелыЗапрещены Тогда
		Значение = СтрЗаменить(Значение, " ", "");
	КонецЕсли;
	
	Если СтрДлина(Значение) = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Если содержит только цифры, то в результате замен должна быть получена пустая строка.
	// Проверять при помощи ПустаяСтрока нельзя, так как в исходной строке могут быть пробельные символы.
	Возврат СтрДлина(
	СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить(
	СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( 
	Значение, "0", ""), "1", ""), "2", ""), "3", ""), "4", ""), "5", ""), "6", ""), "7", ""), "8", ""), "9", "")) = 0;
	
КонецФункции
#КонецОбласти

#Область МанипуляцииСоСтроками
// Удаляет крайние повторяющиеся символы слева или справа в строке.
//
// Параметры:
//  Значение        - Строка - исходная строка, из которой необходимо удалить крайние повторяющиеся символы;
//  УдаляемыйСимвол - Строка - искомый символ для удаления;
//  Режим           - Строка - "Слева" или "Справа" - режим удаления символов в исходной строке.
//
// Возвращаемое значение:
//  Строка - обрезанная строка.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////
Функция УдалитьПовторяющиесяСимволы(Знач Значение, Знач УдаляемыйСимвол, Знач Режим = "Слева") Экспорт
	
	Если ВРег(Режим) = "СЛЕВА" Тогда
		Пока Лев(Значение, 1) = УдаляемыйСимвол Цикл
			Значение = Сред(Значение, 2);
		КонецЦикла;
	ИначеЕсли ВРег(Режим) = "СПРАВА" Тогда
		Пока Прав(Значение, 1) = УдаляемыйСимвол Цикл
			Значение = Лев(Значение, СтрДлина(Значение) - 1);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

// Удаляет указанное количество символов строки справа.
//
// Параметры:
//  Значение           - Строка - исходная строка;
//  КоличествоСимволов - Число  - количество удаляемых справа символов
//
// Возвращаемое значение:
//  Строка - инвертированная строка.
//
Функция СтрОбрезатьСправа(Знач Строка, КоличествоСимволов) Экспорт
	
	Возврат Лев(Строка, СтрДлина(Строка) - КоличествоСимволов);
	
КонецФункции

// Удаляет указанное количество символов строки слева.
//
// Параметры:
//  Значение           - Строка - исходная строка;
//  КоличествоСимволов - Число  - количество удаляемых слева символов
//
// Возвращаемое значение:
//  Строка - инвертированная строка.
//
Функция СтрОбрезатьСлева(Знач Строка, КоличествоСимволов) Экспорт
	
	Возврат Сред(Строка, КоличествоСимволов + 1);
	
КонецФункции

// Инвертирует (переворачивает) переданную строку.
//
// Параметры:
//  Значение        - Строка - исходная строка, из которой необходимо удалить крайние повторяющиеся символы;
//
// Возвращаемое значение:
//  Строка - инвертированная строка.
//
Функция ИнвертироватьСтроку(Знач Строка) Экспорт
	
	НоваяСтрока = "";
	
	Если Строка <> "" Тогда

		ДлинаСтроки = СтрДлина(Строка);
		
		Для Индекс = 0 По ДлинаСтроки - 1 Цикл
			
			НоваяСтрока = НоваяСтрока + Сред(Строка, ДлинаСтроки - Индекс, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат НоваяСтрока;
	
КонецФункции

// Формирует строку только из допустимых символов
//
// Параметры:
//  Строка            - Строка - исходная строка, из которой необходимо удалить недопустимые символы;
//  ДопустимыеСимволы - Строка - строка состоящая из допустимых символов;
//
// Возвращаемое значение:
//  Строка - Строка, состоящая только из допустимых символов
//
Функция СтрУбратьНедопустимыеСимволы(Знач Строка, ДопустимыеСимволы) Экспорт
	
	НоваяСтрока = "";
	ЧислоСимволов = СтрДлина(Строка);
	
	Для Индекс = 1 По ЧислоСимволов Цикл
		Символ = Сред(Строка, Индекс, 1);
		Если СтрНайти(ДопустимыеСимволы, Символ) > 0 Тогда
			НоваяСтрока = НоваяСтрока + Символ;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат НоваяСтрока;
	
КонецФункции

// Формирует строку только из допустимых символов для платформы ниже 8.3.5
//
// Параметры:
//  Строка            - Строка - исходная строка, из которой необходимо удалить недопустимые символы;
//  ДопустимыеСимволы - Строка - строка состоящая из допустимых символов;
//
// Возвращаемое значение:
//  Строка - Строка, состоящая только из допустимых символов
//
Функция СтрУбратьНедопустимыеСимволы82(Знач Строка, ДопустимыеСимволы) Экспорт
	
	НоваяСтрока = "";
	ЧислоСимволов = СтрДлина(Строка);
	
	Для Индекс = 1 По ЧислоСимволов Цикл
		Символ = Сред(Строка, Индекс, 1);
		Если Найти(ДопустимыеСимволы, Символ) > 0 Тогда
			НоваяСтрока = НоваяСтрока + Символ;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат НоваяСтрока;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеФункции

// Возвращает строку из цифр.
//
// Параметры:
//
// Возвращаемое значение:
// Строка состоящая только из цифр
Функция ЦифровыеСимволы() Экспорт
	Возврат "0123456789";
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ФункцииКПроверкеИОформлению
Функция ПодставитьПараметрыВСтроку(Знач СтрокаПодстановки, Параметры) Экспорт
	
	Для Каждого Элм Из Параметры Цикл
		СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%" + Элм.Ключ,
		?(ТипЗнч(Элм.Значение) = Тип("Строка"), Элм.Значение, СокрЛП(Элм.Значение)));
	КонецЦикла;
	
	Возврат СтрокаПодстановки;
	
КонецФункции

Функция СтрЗаменитьСправа(Знач Строка, ЧислоСимволов, СтрокаЗамены) Экспорт
	
	Возврат СтрОбрезатьСправа(Строка, ЧислоСимволов) + СтрокаЗамены;
	
КонецФункции

Функция СтрЗаменитьСлева(Знач Строка, ЧислоСимволов, СтрокаЗамены) Экспорт
	
	Возврат СтрокаЗамены + СтрОбрезатьСлева(Строка, ЧислоСимволов);
	
КонецФункции

Функция СобратьПредставлениеЗначений(МассивЗначений, Разделитель = " ", ФорматнаяСтрока = "") Экспорт
	
	МассивСоединения = Новый Массив;
	Форматировать = Не ПустаяСтрока(ФорматнаяСтрока);
	
	Если Форматировать Тогда
		ФорматныйТип = Новый ОписаниеТипов("Число,Дата,Булево");
	Иначе
		ФорматныйТип = Неопределено;
	КонецЕсли; 
	
	Для каждого ЭлементМассива Из МассивЗначений Цикл
		
		Если Форматировать И ФорматныйТип.СодержитТип(ТипЗнч(ЭлементМассива)) Тогда
			МассивСоединения.Добавить(Формат(ЭлементМассива, ФорматнаяСтрока));
		Иначе
			МассивСоединения.Добавить(Строка(ЭлементМассива));
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрСоединить(МассивСоединения, Разделитель);
	
КонецФункции

Процедура ДобавитьСтрокуТекста(Текст, Строка) Экспорт
	
	Если Не ПустаяСтрока(Строка) Тогда
		Текст = Текст + ?(ПустаяСтрока(Текст), "", "
		|") + Строка;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьВхожденияПодстроки(Знач Строка, ПодстрокаПоиска) Экспорт
	
	СтрокаВхождений = Строка;
	МассивВхождений = Новый Массив;
	ДлинаПодстроки = СтрДлина(ПодстрокаПоиска);
	Обрезано = 0;
	
	Пока Истина Цикл
		Поиск = Найти(СтрокаВхождений, ПодстрокаПоиска);
		
		Если Поиск > 0 Тогда
			МассивВхождений.Добавить(Обрезано + Поиск);
			СтрокаВхождений = СтрОбрезатьСлева(СтрокаВхождений, Поиск + ДлинаПодстроки - 1);
			Обрезано = Обрезано + Поиск + ДлинаПодстроки - 1;
		Иначе    
			Прервать;
		КонецЕсли; 
		
		Если СтрДлина(СтрокаВхождений) < ДлинаПодстроки Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивВхождений;
	
КонецФункции

Процедура СтрГрупповаяЗамена(Строка, СоответствиеЗамен) Экспорт
	
	Для Каждого ЭлементСоответствия Из СоответствиеЗамен Цикл
		Строка = СтрЗаменить(Строка, ЭлементСоответствия.Ключ, ЭлементСоответствия.Значение);
	КонецЦикла;
	
КонецПроцедуры

Процедура СтрУбратьПодрядИдущиеСимволы(Строка, СтрокаЗамены) Экспорт
	
	Для Индекс = 1 По СтрДлина(СтрокаЗамены) Цикл
		
		СимволЗамены = Сред(СтрокаЗамены, Индекс, 1);
		
		Пока Истина Цикл
			
			ПодстрокаЗамены = СимволЗамены + СимволЗамены;
			
			Если Найти(Строка, ПодстрокаЗамены) > 0 Тогда
				Строка = СтрЗаменить(Строка, ПодстрокаЗамены, СимволЗамены);
			Иначе
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЧислоИзСтроки(Знач Строка, ВернутьЧисло = Ложь) Экспорт
	
	Ошибка = ПустаяСтрока(Строка);
	
	Если Ошибка Тогда
		Возврат ?(ВернутьЧисло, 0, Неопределено);
	КонецЕсли; 
	
	ЕстьРазделитель = Ложь;
	Строка = СтрЗаменить(СокрЛП(Строка), " ", "");
	Отрицательное = Лев(Строка, 1) = "-";
	ЦифровойРяд = ЦифровыеСимволы();
	
	Если Отрицательное Тогда
		Строка = СтрОбрезатьСлева(Строка, 1);
	КонецЕсли; 
	
	Для Индекс = 1 По СтрДлина(Строка) Цикл
		Знак = Сред(Строка, Индекс, 1);
		
		Если Знак = "," Или Знак = "." Тогда
			
			Если ЕстьРазделитель Тогда
				Ошибка = Истина;
				Прервать;
			Иначе
				ЕстьРазделитель = Истина;
			КонецЕсли;
			
		ИначеЕсли Найти(ЦифровойРяд, Знак) = 0 Тогда
			Ошибка = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отрицательное Тогда
		Строка = "-" + Строка;
	КонецЕсли; 
	
	Возврат ?(Ошибка, ?(ВернутьЧисло, 0, Неопределено), Число(Строка));
	
КонецФункции 
#КонецОбласти